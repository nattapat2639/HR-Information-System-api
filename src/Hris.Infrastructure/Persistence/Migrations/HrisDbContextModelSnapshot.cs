// <auto-generated />
using System;
using Hris.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hris.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(HrisDbContext))]
    partial class HrisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hris.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime>("HiredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Department = "People Operations",
                            EmployeeNumber = "HR-0001",
                            FullName = "Chanon Phumiphak",
                            HiredAt = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "HR Business Partner",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Department = "Technology",
                            EmployeeNumber = "IT-0005",
                            FullName = "Supaporn Teerapat",
                            HiredAt = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Lead Software Engineer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Department = "Finance",
                            EmployeeNumber = "FN-0010",
                            FullName = "Nattawat Charoen",
                            HiredAt = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Payroll Specialist",
                            Status = "On Leave"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Department = "Marketing",
                            EmployeeNumber = "MK-0042",
                            FullName = "Oranicha Mek",
                            HiredAt = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Marketing Lead",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Department = "Customer Success",
                            EmployeeNumber = "CS-0021",
                            FullName = "Jirawat Kan",
                            HiredAt = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Customer Success Lead",
                            Status = "Probation"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.EmployeePayslipComponent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PayPeriod")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PayslipComponents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Amount = 65000m,
                            ComponentName = "Base Salary",
                            EmployeeId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Notes = "March 2025",
                            PayPeriod = "2025-03"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Amount = 10000m,
                            ComponentName = "Bonus",
                            EmployeeId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Notes = "Performance FY24",
                            PayPeriod = "2025-03"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Amount = -5600m,
                            ComponentName = "Withholding Tax",
                            EmployeeId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Notes = "WHT 5%",
                            PayPeriod = "2025-03"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.EngagementSurvey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("EngagementSurveys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12121212-1212-1212-1212-121212121212"),
                            CloseDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OpenDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Open",
                            Title = "2025 Q1 Engagement Pulse"
                        },
                        new
                        {
                            Id = new Guid("13131313-1313-1313-1313-131313131313"),
                            CloseDate = new DateTime(2025, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OpenDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Title = "Hybrid Work Feedback"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.EngagementSurveyMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MetricName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Score")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Trend")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("EngagementSurveyMetrics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14141414-1414-1414-1414-141414141414"),
                            MetricName = "Participation",
                            Score = "87%",
                            SurveyId = new Guid("12121212-1212-1212-1212-121212121212"),
                            Trend = "+5% QoQ"
                        },
                        new
                        {
                            Id = new Guid("15151515-1515-1515-1515-151515151515"),
                            MetricName = "eNPS",
                            Score = "42",
                            SurveyId = new Guid("12121212-1212-1212-1212-121212121212"),
                            Trend = "+3 pts"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.LeaveRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("RequestedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            EmployeeId = new Guid("11111111-1111-1111-1111-111111111111"),
                            EndDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = "Annual Leave",
                            Reference = "LV-2025-0001",
                            RequestedOn = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            EmployeeId = new Guid("11111111-1111-1111-1111-111111111111"),
                            EndDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = "Sick Leave",
                            Reference = "LV-2025-0004",
                            RequestedOn = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            EmployeeId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EndDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = "Work From Home",
                            Reference = "LV-2025-0007",
                            RequestedOn = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            EmployeeId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EndDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = "Annual Leave",
                            Reference = "LV-2024-0145",
                            RequestedOn = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            EmployeeId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EndDate = new DateTime(2024, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = "Sick Leave",
                            Reference = "LV-2024-0162",
                            RequestedOn = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.NotificationPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("NotificationPreferences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f1f1f1f-1f1f-1f1f-1f1f-1f1f1f1f1f1f"),
                            Channel = "Email",
                            Frequency = "Daily"
                        },
                        new
                        {
                            Id = new Guid("20202020-2020-2020-2020-202020202020"),
                            Channel = "In-app",
                            Frequency = "Real-time"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.PayrollSummaryRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<decimal>("GrossPay")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("numeric");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PayrollSummaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Department = "Technology",
                            GrossPay = 2560000m,
                            NetPay = 2180000m,
                            Period = "2025-03",
                            Status = "Approved",
                            TotalEmployees = 42
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Department = "Operations",
                            GrossPay = 820000m,
                            NetPay = 705000m,
                            Period = "2025-03",
                            Status = "Pending",
                            TotalEmployees = 18
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.PerformanceReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ReviewCycle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<decimal>("Score")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PerformanceReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            EmployeeId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ManagerName = "Karn Suphachai",
                            ReviewCycle = "Mid-Year 2024",
                            Score = 4.3m,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            EmployeeId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ManagerName = "Karn Suphachai",
                            ReviewCycle = "Year-End 2024",
                            Score = 4.6m,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            EmployeeId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ManagerName = "Sureeporn Wai",
                            ReviewCycle = "Year-End 2024",
                            Score = 3.9m,
                            Status = "Pending Approval"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.ReportEmployeeRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("ReportEmployees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16161616-1616-1616-1616-161616161616"),
                            Department = "People Operations",
                            EmployeeId = "HR-0001",
                            Name = "Chanon Phumiphak",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("17171717-1717-1717-1717-171717171717"),
                            Department = "Technology",
                            EmployeeId = "IT-0005",
                            Name = "Supaporn Teerapat",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.ReportLeaveRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DaysUsed")
                        .HasColumnType("integer");

                    b.Property<string>("Employee")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("ReportLeaves");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18181818-1818-1818-1818-181818181818"),
                            DaysUsed = 12,
                            Employee = "Oranicha Mek",
                            LeaveType = "Annual Leave",
                            Status = "Approved"
                        },
                        new
                        {
                            Id = new Guid("19191919-1919-1919-1919-191919191919"),
                            DaysUsed = 5,
                            Employee = "Jirawat Kan",
                            LeaveType = "Sick Leave",
                            Status = "Approved"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.ReportPayrollRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("GrossPay")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("numeric");

                    b.Property<string>("PayGroup")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("ReportPayroll");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a"),
                            GrossPay = 3950000m,
                            NetPay = 3210000m,
                            PayGroup = "Monthly",
                            Status = "Completed"
                        },
                        new
                        {
                            Id = new Guid("1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"),
                            GrossPay = 780000m,
                            NetPay = 655000m,
                            PayGroup = "Bi-weekly",
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.ReportPerformanceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AverageScore")
                        .HasColumnType("numeric");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Trend")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("ReportPerformance");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c1d1e1f-1111-2222-3333-444455556666"),
                            AverageScore = 4.3m,
                            Department = "Technology",
                            Status = "Published",
                            Trend = "+0.2"
                        },
                        new
                        {
                            Id = new Guid("1c2d3e4f-5555-6666-7777-888899990000"),
                            AverageScore = 4.0m,
                            Department = "Operations",
                            Status = "Published",
                            Trend = "+0.1"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.SecuritySetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MfaMode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordPolicy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("SecuritySettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2121-2121-2121-222222222222"),
                            MfaMode = "Required",
                            PasswordPolicy = "Standard"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.SystemConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Workweek")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21212121-2121-2121-2121-212121212121"),
                            Timezone = "(UTC+07:00) Bangkok",
                            Workweek = "Monday to Friday"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.TrainingProgressRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TrainingProgress");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-fffffffffff1"),
                            EmployeeId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ProgramName = "OKRs Mastery",
                            StartDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-fffffffffff2"),
                            EmployeeId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EndDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProgramName = "Cloud Fundamentals",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.TrainingRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TrainingRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            ProgramName = "Data Storytelling",
                            RequestedBy = "Janya K.",
                            Status = "Pending",
                            SubmittedOn = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-0000000000a2"),
                            ProgramName = "Advanced Excel Automation",
                            RequestedBy = "Pattama Mee",
                            Status = "Approved",
                            SubmittedOn = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.TrainingSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Trainer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("TrainingSessions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeee1"),
                            SessionDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Open",
                            Title = "Advanced Angular Workshop",
                            Trainer = "Anan Techakun"
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeee2"),
                            SessionDate = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Waitlist",
                            Title = "Leadership for Managers",
                            Trainer = "Sasithorn P."
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c1c1c1c-1c1c-1c1c-1c1c-1c1c1c1c1c1c"),
                            Email = "alex.morgan@company.com",
                            Name = "Alex Morgan",
                            Role = "Administrator",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("1d1d1d1d-1d1d-1d1d-1d1d-1d1d1d1d1d1d"),
                            Email = "pakamon.dee@company.com",
                            Name = "Pakamon Dee",
                            Role = "Manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("1e1e1e1e-1e1e-1e1e-1e1e-1e1e1e1e1e1e"),
                            Email = "siwaporn.lek@company.com",
                            Name = "Siwaporn Lek",
                            Role = "Employee",
                            Status = "Suspended"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.UserRoleSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AssignedUsers")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23232323-2323-2323-2323-232323232323"),
                            AssignedUsers = 3,
                            Description = "Full access to manage system settings",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("24242424-2424-2424-2424-242424242424"),
                            AssignedUsers = 18,
                            Description = "Manage team approvals and reports",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = new Guid("25252525-2525-2525-2525-252525252525"),
                            AssignedUsers = 420,
                            Description = "Self-service access",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("Hris.Domain.Entities.EmployeePayslipComponent", b =>
                {
                    b.HasOne("Hris.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Domain.Entities.EngagementSurveyMetric", b =>
                {
                    b.HasOne("Hris.Domain.Entities.EngagementSurvey", "Survey")
                        .WithMany("Metrics")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Hris.Domain.Entities.LeaveRequest", b =>
                {
                    b.HasOne("Hris.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Domain.Entities.PerformanceReview", b =>
                {
                    b.HasOne("Hris.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Domain.Entities.TrainingProgressRecord", b =>
                {
                    b.HasOne("Hris.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Domain.Entities.EngagementSurvey", b =>
                {
                    b.Navigation("Metrics");
                });
#pragma warning restore 612, 618
        }
    }
}
